<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation=
		"http://www.springframework.org/schema/beans 
		 http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/security
		 http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<http auto-config="true">
		<!-- 페이지별 보안/접근 기준 설정 -->
		<form-login login-page="/joinus/login.htm" 
			authentication-failure-url="/joinus/login.htm?error"
			default-target-url="/customer/notice.htm"
			/>
		<logout logout-success-url="/customer/notice.htm"/>
		<intercept-url pattern="/customer/noticeDetail.htm" access="ROLE_USER"></intercept-url>
		<intercept-url pattern="/customer/noticeReg.htm" access="ROLE_ADMIN"></intercept-url>
	</http>

	<authentication-manager>
		<authentication-provider>
		<!-- JDBC를 활용하는 방법 -->
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="SELECT &quot;UID&quot; USERID, PWD PASSWORD, 1 ENABLED FROM MEMBER WHERE &quot;UID&quot;=?"
				authorities-by-username-query="SELECT &quot;UID&quot; USERID, 'ROLE_USER' ROLE_NAME FROM MEMBER WHERE &quot;UID&quot;=?"
			 />
		<!-- 사용자 정보 입력란 : 상단에서 설정한 기준에 적용시킬 데이터 : 메모리상에 임시 저장하는 방식 -->
		<!-- 	<user-service>
				<user name="newlec" password="111" authorities="ROLE_USER"></user>
				<user name="dragon" password="111" authorities="ROLE_USER"></user>
				<user name="admin" password="111" authorities="ROLE_ADMIN,ROLE_USER"></user>
			</user-service> -->
		</authentication-provider>
	</authentication-manager>
<!-- 상기 코드는 설정 정보일뿐, 실질적으로 가로채는건 web.xml에 설정한다. -->
</beans:beans>
